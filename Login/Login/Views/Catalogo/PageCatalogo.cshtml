@model IEnumerable<Login.Models.Professor>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="~/css/normalize.css">
    <title>TeachMe | Menu Principal</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: 'Open Sans', sans-serif;
        }


        a {
            text-decoration: none;
        }

        header {
            top: 0;
            position: fixed;
            float: left;
            margin: 0 0 30px 0;
            padding: 5px 0 0 0;
            width: 100%;
        }

        #logo {
            text-align: center;
            margin: 0;
        }


        nav {
            text-align: center;
            padding: 10px 0;
            margin: 30px 0 0;
        }

            nav ul {
                list-style: none;
                margin: 0 10px;
                padding: 0;
            }


            nav li {
                display: inline-block;
            }

            nav a {
                font-weight: 800;
                padding: 15px 10px;
            }

        /* site body */
        body {
            background-color: whitesmoke;
        }

        /* green header */
        header {
            background: #6ab47b;
            border-color: #599a68;
        }

        /* nav background on mobile */
        nav {
            background: #599a68;
        }

            /* nav link */
            nav a, nav a:visited {
                color: #fff;
            }

                /* selected nav link */
                nav a.selected, nav a:hover {
                    color: #32673f;
                }

        /* links */
        a {
            color: #6ab47b;
        }

        #form-div {
            max-width: 400px;
            margin: 0 auto;
            padding: 20% 5%;
        }


        img {
            display: block;
            padding-top: 1%;
            margin-left: auto;
            margin-right: auto;
            width: 10%;
        }

        .dropbtn {
            background: #599a68;
            color: #ff8181;
            padding: 2px;
            margin-left: 50px;
            font-size: 16px;
            font-weight: 800;
            border: none;
            cursor: pointer;
        }

            /* Dropdown button on hover & focus */
            .dropbtn:hover, .dropbtn:focus {
                background-color: #32673f;
            }

        /* The container <div> - needed to position the dropdown content */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        /* Dropdown Content (Hidden by Default) */
        .dropdown-content {
            display: none;
            position: absolute;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            /* Links inside the dropdown */
            .dropdown-content a {
                color: black;
                padding: 8px 12px;
                text-decoration: none;
                display: block;
            }

                /* Change color of dropdown links on hover */
                .dropdown-content a:hover {
                    background-color: #808080;
                }

        /* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
        .show {
            display: block;
        }
    </style>
</head>
<body>
    <header>
        <a href="index.html" id="logo">
            <img src="~/css/logo_new.png" alt="">
        </a>
        <nav>
            <ul>
                <li><a href="@Url.Action("PageCatalogo","Catalogo")">Catálogo de Professores</a></li>
                <li><a href="@Url.Action("PageEquipa","Equipa")">Pedidos</a></li>
                <li><a href="@Url.Action("PageContacto","Contacto")">Histórico</a></li>
                <li>
                    <div class="dropdown">
                        <button onclick="myFunction()" class="dropbtn">Perfil</button>
                        <div id="myDropdown" class="dropdown-content">
                            <a href="@Url.Action("EditarPerfil","EditarPerfil")">Editar Prefil</a>
                            <a href="#">Favoritos</a>
                            <a href="@Url.Action("LogOut","Login")">LogOut</a>
                        </div>
                    </div>
                    <script>
                        /* When the user clicks on the button,
                        toggle between hiding and showing the dropdown content */
                        function myFunction() {
                            document.getElementById("myDropdown").classList.toggle("show");
                        }

                        // Close the dropdown if the user clicks outside of it
                        window.onclick = function (event) {
                            if (!event.target.matches('.dropbtn')) {

                                var dropdowns = document.getElementsByClassName("dropdown-content");
                                var i;
                                for (i = 0; i < dropdowns.length; i++) {
                                    var openDropdown = dropdowns[i];
                                    if (openDropdown.classList.contains('show')) {
                                        openDropdown.classList.remove('show');
                                    }
                                }
                            }
                        }
                    </script>
                </li>
            </ul>
        </nav>
    </header>

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Data_Nascimento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Password)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Classificacao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Numero_Telemovel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ativo)
                </th>
                <th></th>
            </tr>

            @if (Model != null)
            {
                foreach (var item in Model)

                {
                   <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Data_Nascimento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Password)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Classificacao)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Numero_Telemovel)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Ativo)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                    </tr>
                }
            }
        </table>
</body>
</html>









